import{_ as t,c as a,o as e,a5 as d,aR as i,aS as s,aT as o,aU as p,aV as r,aW as c,aX as l}from"./chunks/framework.XredCqQG.js";const P=JSON.parse('{"title":"添加内部应用","description":"","frontmatter":{},"headers":[],"relativePath":"light-app/create.md","filePath":"light-app/create.md"}'),h={name:"light-app/create.md"},n=d('<h1 id="添加内部应用" tabindex="-1">添加内部应用 <a class="header-anchor" href="#添加内部应用" aria-label="Permalink to &quot;添加内部应用&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">阅读本文，你将了解：</p><ul><li>如何在平台上发布应用及设置使用权限和入口等；</li><li>如何设置应用红点数字提醒、自定义头部等；</li></ul><p>本文主要围绕上架<code>轻应用</code>来描述，其他类型应用在设置上也大同小异。</p></div><p>登录管理后台，选择并进入对应的组织，然后点击<code>应用管理</code>菜单，从右上角的<code>添加</code>按钮，选择<code>内部应用</code>，即可进入创建内部应用的界面。</p><h2 id="基本信息" tabindex="-1">基本信息 <a class="header-anchor" href="#基本信息" aria-label="Permalink to &quot;基本信息&quot;">​</a></h2><p>如下图，带红星的字段表示必填，如果没有<code>应用分类</code>，点击<code>创建分类</code>进行创建即可。</p><p><img src="'+i+'" alt="基本信息"></p><h2 id="应用类型" tabindex="-1">应用类型 <a class="header-anchor" href="#应用类型" aria-label="Permalink to &quot;应用类型&quot;">​</a></h2><p>当前支持上架的应用类型包括：<code>轻应用</code>、<code>服务号</code>及<code>原生应用</code>。</p><h3 id="轻应用" tabindex="-1">轻应用 <a class="header-anchor" href="#轻应用" aria-label="Permalink to &quot;轻应用&quot;">​</a></h3><p>H5 网页应用，也是 BeeWorks 移动平台上主要的应用类型，可通过 JS-SDK 调用原生能力，并支持多种自定义配置，是业务系统快速移动化的重要手段。</p><h3 id="服务号" tabindex="-1">服务号 <a class="header-anchor" href="#服务号" aria-label="Permalink to &quot;服务号&quot;">​</a></h3><p>类似微信的“公众号”，属于应用的一种类型。创建该类型的应用，需要单独访问服务号“应用后台”进行配置，例如设置“关键字自动回复”，自定义“服务号菜单”等。</p><p><img src="'+s+'" alt="服务号"></p><h3 id="原生应用" tabindex="-1">原生应用 <a class="header-anchor" href="#原生应用" aria-label="Permalink to &quot;原生应用&quot;">​</a></h3><p>在 BeeWorks 应用中心上架原生应用，大多设置跟轻应用类似，只是入口需要上传相应安装包或者指定某个系统级别应用。</p><p>更多说明，请查看<a href="/light-app/nativeApp.html">上架原生应用</a>。</p><h2 id="应用入口" tabindex="-1">应用入口 <a class="header-anchor" href="#应用入口" aria-label="Permalink to &quot;应用入口&quot;">​</a></h2><p>如下图，创建应用时，需要直接填写“应用主入口”的信息，包括“名称”、“图标”和“启动地址”等。</p><p><img src="'+o+`" alt="启动地址"></p><p>目前提供3个平台的设置，包括<code>苹果</code>、<code>安卓</code>及<code>PC客户端</code>，其中<code>苹果</code>和<code>安卓</code>的设置是一样，而<code>PC客户端</code>的相对少一些。以下是各字段的各端支持说明：</p><table><thead><tr><th>字段名</th><th>苹果</th><th>安卓</th><th>PC 客户端</th></tr></thead><tbody><tr><td>应用参数设置</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>红点数字提醒源</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>启动地址</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>强制安装</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>应用市场显示</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>移动端离线资源包</td><td>支持</td><td>支持</td><td>不支持</td></tr><tr><td>离线包外部备用地址</td><td>支持</td><td>支持</td><td>不支持</td></tr><tr><td>显示风格</td><td>支持</td><td>支持</td><td>不支持</td></tr><tr><td>是否全屏</td><td>支持</td><td>支持</td><td>不支持</td></tr><tr><td>标题栏设置</td><td>支持</td><td>支持</td><td>不支持</td></tr><tr><td>进度条颜色</td><td>支持</td><td>支持</td><td>不支持</td></tr><tr><td>使用应用内嵌浏览器</td><td>不支持</td><td>不支持</td><td>支持</td></tr></tbody></table><div class="warning custom-block"><p class="custom-block-title">提示</p><p>在较新版本，一些移动端独有的设置，统一归类到“移动端更多设置”上，可访问<a href="/light-app/create.html#移动端设置">移动端设置</a>了解更多。</p></div><h3 id="红点数字提醒源" tabindex="-1">红点数字提醒源 <a class="header-anchor" href="#红点数字提醒源" aria-label="Permalink to &quot;红点数字提醒源&quot;">​</a></h3><p>该设置，适用于需要做红点提示的应用，例如审批类的轻应用，支持显示<code>红点</code>、<code>数字</code>及<code>图标</code>，具体文档，请查看<a href="/light-app/notify.html">应用红点</a>。</p><h3 id="启动地址" tabindex="-1">启动地址 <a class="header-anchor" href="#启动地址" aria-label="Permalink to &quot;启动地址&quot;">​</a></h3><p>顾名思义，就是轻应用的访问地址，通常都是<code>http(s)://</code>的访问方式。同时，入口支持传入参数占位符，当应用在客户端被打开时，客户端会自行填充参数。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置启动地址如下：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">https</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//test-app.beeworks.cn?ticket={{ticket}}&amp;language={{language}}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 当应用启动时，ticket及language会根据当前用户信息及语言进行填充：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">https</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//test-app.beeworks.cn?ticket=demo-ticket&amp;language=en</span></span></code></pre></div><p>支持的参数占位符包括以下属性：</p><table><thead><tr><th>字段名</th><th>说明</th></tr></thead><tbody><tr><td>ticket</td><td>用户ticket，常用于单点登录</td></tr><tr><td>user_id</td><td>用户的 user_id</td></tr><tr><td>org_id</td><td>打开应用时，用户所在的组织id</td></tr><tr><td>domain_id</td><td>打开应用时，用户所在的域id</td></tr><tr><td>language</td><td>应用的语言类型</td></tr><tr><td>username</td><td>用户的 username</td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">关于占位符</p><p>因为<code>PC客户端</code>默认使用下划线的命名方式设置参数的<code>key</code>值，具体原因可以查看<a href="/light-app/sso.html#pc-客户端">单点登录-获取用户信息</a>，为了保持一致性，请统一使用下划线的<code>key</code>值，如：</p><div><p><code>?user_id={{user_id}}&amp;domain_id={{domain_id}}</code>。</p><p>注意，是使用双花括号<code>{{ your key }}</code>包住需要的参数占位符。</p></div></div><p>除了设置占位符来获取用户信息，通常为了避免缓存，上架新版本时，可以尝试在启动地址后加入版本信息参数，如下：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">https</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//test-app.beeworks.cn?v=1.2.0</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">关于启动地址</p><p>首次创建应用，可以同时选择3个平台，安卓、苹果及 PC 客户端，但实际可以填写启动地址只有一处，那是因为创建应用实际也是创建快捷入口的一种，如果各端的访问地址不一样，需要创建应用后，再单独添加对应端的应用快捷入口。</p></div><h3 id="离线资源包" tabindex="-1">离线资源包 <a class="header-anchor" href="#离线资源包" aria-label="Permalink to &quot;离线资源包&quot;">​</a></h3><p><code>离线资源包</code>设置是移动端特有，需要上传<code>zip</code>压缩包，并且需要设置相应的<code>启动地址</code>，具体说明，请查看<a href="/light-app/offline.html">离线应用</a>。</p><h2 id="移动端设置" tabindex="-1">移动端设置 <a class="header-anchor" href="#移动端设置" aria-label="Permalink to &quot;移动端设置&quot;">​</a></h2><p>点击“移动端更多设置”，即可展开该设置页面。相关设置主要提供移动端 WebView 头部自定义的能力。</p><p><img src="`+p+'" alt="移动端设置"></p><h3 id="应用参数设置" tabindex="-1">应用参数设置 <a class="header-anchor" href="#应用参数设置" aria-label="Permalink to &quot;应用参数设置&quot;">​</a></h3><p>注意，该参数设置，并非为常见的 URL 上的参数设置，而是作为应用实体的一个属性。通常用于应对特殊的情况，例如设置参数<code>vpn</code>为 1，即在启动应用之前，会开启 vpn。</p><div class="tip custom-block"><p class="custom-block-title">提示</p><p>该设置并非为通用设置，通常情况下，需要客户端进行定制。</p></div><h3 id="沉浸式" tabindex="-1">沉浸式 <a class="header-anchor" href="#沉浸式" aria-label="Permalink to &quot;沉浸式&quot;">​</a></h3><p>在一些门户级别，或者页面顶部有大图展示的应用，在“沉浸式”的模式下，表现力会更强。</p><p>若想开启“沉浸式”头部，需要先勾选“全屏”设置。开启后，页面的可访问区域将会延伸到手机顶部，此时需要留意页面的安全区域问题。</p><blockquote><p>系统版本低于 5.0 的安卓机型，不完全能支持“沉浸式”功能。</p></blockquote><h2 id="应用权限" tabindex="-1">应用权限 <a class="header-anchor" href="#应用权限" aria-label="Permalink to &quot;应用权限&quot;">​</a></h2><p>应用权限设置，实际就是对应用角色的设置。如下图，共分为3个角色：</p><ul><li>普通用户，即<code>使用范围</code></li><li>管理员</li><li>超级管理员</li></ul><p>通常开发轻应用，都需要设定<code>普通用户</code>及<code>管理员</code>的角色，通过平台提供的应用相关<strong>API接口</strong>，即可获取到应用对应的角色人员。</p><p><img src="'+r+'" alt="使用范围"></p><h2 id="创建应用入口" tabindex="-1">创建应用入口 <a class="header-anchor" href="#创建应用入口" aria-label="Permalink to &quot;创建应用入口&quot;">​</a></h2><p>应用入口又名快捷入口，一个应用可以创建多个快捷入口，相关设置跟上面提到的<code>基本信息</code>及<code>启动地址</code>一致。</p><p><img src="'+c+'" alt="创建应用入口"></p><h2 id="消息模版" tabindex="-1">消息模版 <a class="header-anchor" href="#消息模版" aria-label="Permalink to &quot;消息模版&quot;">​</a></h2><p>模版消息是一种特殊的消息类型，可以在管理后台进行可视化编辑，保存成功后，可以获得对应的<code>模板ID</code>。</p><p><img src="'+l+'" alt="消息模版"></p><p>可以根据实际需求，设定不同的模版消息，具体使用方式，请查看<a href="/api/app/template.html">模板消息</a>。</p>',57),k=[n];function u(m,b,g,_,q,f){return e(),a("div",null,k)}const y=t(h,[["render",u]]);export{P as __pageData,y as default};
