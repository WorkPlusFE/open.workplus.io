import{_ as s,c as i,o as a,a5 as t,ba as e,bb as n}from"./chunks/framework.D4ctqEPk.js";const u=JSON.parse('{"title":"应用红点数字","description":"","frontmatter":{},"headers":[],"relativePath":"light-app/notify.md","filePath":"light-app/notify.md"}'),l={name:"light-app/notify.md"},p=t('<h1 id="应用红点数字" tabindex="-1">应用红点数字 <a class="header-anchor" href="#应用红点数字" aria-label="Permalink to &quot;应用红点数字&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">阅读本文，你将了解：</p><ul><li>应用红点的所有类型；</li><li>应用红点生成的链接规则，以及消除的方式。</li></ul></div><h2 id="什么是应用红点数字" tabindex="-1">什么是应用红点数字 <a class="header-anchor" href="#什么是应用红点数字" aria-label="Permalink to &quot;什么是应用红点数字&quot;">​</a></h2><p><img src="'+e+'" alt="应用红点" width="400"></p><p>如上图中的<code>流程大师</code>应用右上角的红点数字，当前支持显示红点、数字及图标。除了默认的“应用中心”栏目，在<a href="/light-app/workbench.html">工作台</a>上的应用同样支持。通过约定好链接的方式，在管理后台上架应用时可以指定红点请求的地址。</p><p>在添加“应用入口”时，可以根据实际需求添加“红点数字提醒源”，如下图：</p><p><img src="'+n+`" alt="应用红点设置"></p><h2 id="显示规则" tabindex="-1">显示规则 <a class="header-anchor" href="#显示规则" aria-label="Permalink to &quot;显示规则&quot;">​</a></h2><ul><li>接口由各轻应用提供，但调用的<code>URL</code>及返回数据，需遵守<code>BeeWorks</code>设定的规则；</li><li>对于应用<code>Tab</code>页中的各个轻应用，在应用<code>Tab</code>显示对应轻应用时调用<code>API</code>更新显示此值；</li><li>用户点击进入轻应用后，<strong>由轻应用自己负责清除当前用户的红点，数字或图标</strong>；当返回到<code>Tab</code>页时，APP 会重新再次拉取以刷新。</li></ul><h2 id="api-调用规则" tabindex="-1">API 调用规则 <a class="header-anchor" href="#api-调用规则" aria-label="Permalink to &quot;API 调用规则&quot;">​</a></h2><p>调用 URL 规则：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tenantId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{tenantId}}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">username</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{username}}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ticket</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ticket}}</span></span></code></pre></div><p>参数说明：</p><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>URL</td><td>String</td><td>这个值由轻应用提供，此项在后台中配置</td></tr><tr><td>tenantId</td><td>String</td><td>租户ID，当前移动端的用户的域id，由移动端自动填充</td></tr><tr><td>username</td><td>String</td><td>当前用户帐号，由移动端自动填充</td></tr><tr><td>ticket</td><td>String</td><td>给轻应用做单点登陆所用，由移动端自动填充</td></tr></tbody></table><p><a href="/light-app/create.html#启动地址">应用访问地址的参数</a>，在这里同样适用，约定参数均需要使用双花括号括着。</p><p>返回格式规则：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Everything is ok&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> tip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   notify_type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;dot&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   icon_url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;url&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   num</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><code>status</code>为<code>0</code>时，表示接口调用成功；非<code>0</code>时，表示接口调用失败，<code>message</code>此时表示失败的原因。</p><p><code>notify_type</code>包括4种类型，如下：</p><ul><li><code>dot</code> 在轻应用上显示一个红点</li><li><code>digit</code> 在轻应用上显示一个数字</li><li><code>icon</code> 在轻应用上显示一个图标</li><li><code>nothing</code> 轻应用上不显示红点或数字或图标</li></ul><p>而<code>icon_url</code>，只有在<code>notify_type</code>为<code>icon</code>时才会获取，此值为图标资源地址。</p><p><code>num</code> 当notify_type为digit 时，此值表示一个数字。</p><div class="warning custom-block"><p class="custom-block-title">关于清空提醒</p><p>如果应用添加了“红点数字提醒源”，在需要清空的时候，接口必须返回<code>nothing</code>的<code>type</code>，而不是返回一个空的结果。</p></div>`,23),h=[p];function d(k,o,c,r,E,g){return a(),i("div",null,h)}const m=s(l,[["render",d]]);export{u as __pageData,m as default};
